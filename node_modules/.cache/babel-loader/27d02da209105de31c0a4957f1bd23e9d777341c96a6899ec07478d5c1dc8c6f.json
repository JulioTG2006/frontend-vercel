{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\frontend-tailwind-base\\\\src\\\\components\\\\AudioRecorder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { subirAudio } from '../services/api';\nimport ResultDisplay from './ResultDisplay';\nimport { obtenerTraduccion } from '../services/api';\nimport { FaMicrophoneAlt } from 'react-icons/fa';\nimport { FaPaperPlane } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunks = useRef([]);\n  const [resultado, setResultado] = useState(null);\n  const [cargando, setCargando] = useState(false);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    mediaRecorderRef.current.ondataavailable = event => {\n      audioChunks.current.push(event.data);\n    };\n    mediaRecorderRef.current.onstop = () => {\n      const audio = new Blob(audioChunks.current, {\n        type: 'audio/wav'\n      });\n      setAudioBlob(audio);\n      audioChunks.current = [];\n    };\n    mediaRecorderRef.current.start();\n    setRecording(true);\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setRecording(false);\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setAudioBlob(file); // Lo tratamos igual que un blob grabado\n    }\n  };\n  const handleSend = async () => {\n    if (!audioBlob) return;\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'grabacion.wav');\n    setCargando(true);\n    try {\n      const res = await subirAudio(formData);\n      const id = res.data.id;\n      const respuesta = await obtenerTraduccion(id);\n      setResultado(respuesta.data);\n    } catch (error) {\n      console.error(error);\n      alert(\"Error al enviar o recibir datos del backend.\");\n    } finally {\n      setCargando(false);\n    }\n  };\n  const cancelarAudio = () => {\n    setAudioBlob(null);\n    setSelectedFile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white/10 dark:bg-white/5 backdrop-blur-md rounded-xl shadow-lg max-w-xl mx-auto text-center space-y-4 border border-white/20\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-cyan-300 drop-shadow-md flex items-center justify-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(FaMicrophoneAlt, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 3\n      }, this), \"Grabador de voz\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-1 font-medium\",\n        children: \"O selecciona un archivo de audio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: handleFileChange,\n        className: \"border rounded p-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 3\n      }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-1 text-sm text-gray-600\",\n        children: [\"Archivo: \", selectedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: recording ? stopRecording : startRecording,\n      className: `text-white bg-gradient-to-r from-blue-600 to-cyan-400 hover:shadow-xl font-semibold text-lg px-6 py-2 rounded-full transition-all duration-300 ${recording ? 'bg-red-500' : 'bg-blue-500'}`,\n      children: recording ? 'Detener' : 'Grabar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), audioBlob && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: URL.createObjectURL(audioBlob),\n        className: \"w-full mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col sm:flex-row gap-2 justify-center mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"bg-green-600 text-white px-4 py-2 rounded inline-flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), \"Enviar\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cancelarAudio,\n          className: \"text-white bg-gradient-to-r from-blue-600 to-cyan-400 hover:shadow-xl font-semibold text-lg px-6 py-2 rounded-full transition-all duration-300\",\n          children: \"Cancelar / Repetir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ResultDisplay, {\n      resultado: resultado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 1\n  }, this);\n};\n_s(AudioRecorder, \"+1OzArnxANK8V7t1K3kaTlO3bk8=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","subirAudio","ResultDisplay","obtenerTraduccion","FaMicrophoneAlt","FaPaperPlane","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioRecorder","_s","recording","setRecording","audioBlob","setAudioBlob","selectedFile","setSelectedFile","mediaRecorderRef","audioChunks","resultado","setResultado","cargando","setCargando","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","Blob","type","start","stopRecording","stop","handleFileChange","e","file","target","files","handleSend","formData","FormData","append","res","id","respuesta","error","console","alert","cancelarAudio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","name","onClick","controls","src","URL","createObjectURL","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/frontend-tailwind-base/src/components/AudioRecorder.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { subirAudio } from '../services/api';\r\nimport ResultDisplay from './ResultDisplay';\r\nimport { obtenerTraduccion } from '../services/api';\r\nimport { FaMicrophoneAlt } from 'react-icons/fa'; \r\nimport { FaPaperPlane } from 'react-icons/fa'; \r\n\r\n\r\n\r\n\r\nconst AudioRecorder = () => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunks = useRef([]);\r\n  const [resultado, setResultado] = useState(null);\r\n  const [cargando, setCargando] = useState(false);\r\n\r\n\r\n\r\n  const startRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    mediaRecorderRef.current = new MediaRecorder(stream);\r\n\r\n    mediaRecorderRef.current.ondataavailable = (event) => {\r\n      audioChunks.current.push(event.data);\r\n    };\r\n\r\n    mediaRecorderRef.current.onstop = () => {\r\n      const audio = new Blob(audioChunks.current, { type: 'audio/wav' });\r\n      setAudioBlob(audio);\r\n      audioChunks.current = [];\r\n    };\r\n\r\n    mediaRecorderRef.current.start();\r\n    setRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    mediaRecorderRef.current.stop();\r\n    setRecording(false);\r\n  };\r\n  const handleFileChange = (e) => {\r\n  const file = e.target.files[0];\r\n  if (file) {\r\n    setSelectedFile(file);\r\n    setAudioBlob(file); // Lo tratamos igual que un blob grabado\r\n  }\r\n};\r\n  const handleSend = async () => {\r\n    if (!audioBlob) return;\r\n    const formData = new FormData();\r\n    formData.append('audio', audioBlob, 'grabacion.wav');\r\n\r\n    setCargando(true);\r\n\r\n    try {\r\n      const res = await subirAudio(formData);\r\n      const id = res.data.id;\r\n\r\n      const respuesta = await obtenerTraduccion(id);\r\n      setResultado(respuesta.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Error al enviar o recibir datos del backend.\");\r\n    } finally {\r\n      setCargando(false); \r\n    }\r\n  };\r\n\r\n    const cancelarAudio = () => {\r\n    setAudioBlob(null);\r\n    setSelectedFile(null);\r\n    };\r\n  return (\r\n<div className=\"p-6 bg-white/10 dark:bg-white/5 backdrop-blur-md rounded-xl shadow-lg max-w-xl mx-auto text-center space-y-4 border border-white/20\">\r\n<h2 className=\"text-2xl font-bold text-cyan-300 drop-shadow-md flex items-center justify-center gap-2\">\r\n  <FaMicrophoneAlt />\r\n  Grabador de voz\r\n</h2>\r\n      <div className=\"mt-4\">\r\n  <label className=\"block mb-1 font-medium\">O selecciona un archivo de audio:</label>\r\n  <input\r\n    type=\"file\"\r\n    accept=\"audio/*\"\r\n    onChange={handleFileChange}\r\n    className=\"border rounded p-1\"\r\n  />\r\n    {selectedFile && (\r\n    <p className=\"mt-1 text-sm text-gray-600\">Archivo: {selectedFile.name}</p>\r\n  )}\r\n</div>\r\n      <button\r\n        onClick={recording ? stopRecording : startRecording}\r\n        className={`text-white bg-gradient-to-r from-blue-600 to-cyan-400 hover:shadow-xl font-semibold text-lg px-6 py-2 rounded-full transition-all duration-300 ${\r\n          recording ? 'bg-red-500' : 'bg-blue-500'\r\n        }`}\r\n      >\r\n        {recording ? 'Detener' : 'Grabar'}\r\n      </button>\r\n\r\n    {audioBlob && (\r\n    <>\r\n        <audio controls src={URL.createObjectURL(audioBlob)} className=\"w-full mt-2\" />\r\n        \r\n        <div className=\"flex flex-col sm:flex-row gap-2 justify-center mt-2\">\r\n        <button\r\n          onClick={handleSend}\r\n          className=\"bg-green-600 text-white px-4 py-2 rounded inline-flex items-center gap-2\"\r\n        >\r\n          <FaPaperPlane />\r\n          Enviar\r\n          \r\n        </button>\r\n\r\n        <button\r\n            onClick={cancelarAudio}\r\n            className=\"text-white bg-gradient-to-r from-blue-600 to-cyan-400 hover:shadow-xl font-semibold text-lg px-6 py-2 rounded-full transition-all duration-300\"\r\n        >\r\n            Cancelar / Repetir\r\n        </button>\r\n        </div>\r\n    </>\r\n    )}\r\n\r\n      <ResultDisplay resultado={resultado} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioRecorder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}